---
- name: Setup prefix for all hostnames
  set_fact:
    hostname_prefix: "obi"

# Assume sequential IP addresses starting at 200.
# Hostnames will use prefix, plus the offset (distance) from 200.
- name: Evaluate probable hostnumber
  set_fact:
    hostnumber: "{{ (ansible_default_ipv4.address.split('.')[3] | int) - 200 }}"

- name: Create plausible hostname
  set_fact:
    hostname: "{{ hostname_prefix }}{{ hostnumber }}"

- name: Show potential hostname
  debug:
    msg: "New hostname will be {{ hostname }}"

- name:  Rewrite hostname file
  shell:
    cmd: "echo {{ hostname }} >/etc/hostname"

# This might need to be done several times, as
# the local host seems to list the name twice on a line.
# I don't know why it doesn't match the "second"
# appearance of "NoName" on Ubuntu.  :-/
- name: Fixup /etc/hosts file
  lineinfile:
    path: /etc/hosts
    regex: '^([0-9.]+ )NoName.*$'
    line: '\1{{ hostname }}'
    backrefs: yes
    state: present

# When /etc/cloud directory is present, such as with Ubuntu, more
# work is needed to preserve the host name.
- name: Check for presence of /etc/cloud/cloud.cfg
  stat:
    path: /etc/cloud/cloud.cfg
  register: cloud_cfg

- name: Optionally update cloud.cfg to preserve (new) hostname
  lineinfile:
    path: /etc/cloud/cloud.cfg
    regex: '^(preserve_hostname:) false$'
    line: '\1 true'
    state: present
    backrefs: yes
    create: no
  when: cloud_cfg.stat.exists

- name: Reboot to update machine's hostname
  reboot:
...
